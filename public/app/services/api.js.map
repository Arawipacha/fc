{"version":3,"sources":["app/services/api.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAyC;AACzC,sCAAsC;AACtC,sCAAsE;AACtE,+DAA+D;AAC/D,8CAA2C;AAG3C,uCAAuC;AACvC,qCAAyC;AAGzC,IAAa,GAAG;IAKd,oCAAoC;IACpC,yEAAyE;IACzE,aAAsB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QANhC,kEAAkE;QACxD,YAAO,GAAW,cAAc,CAAC;QAE3C,YAAO,GAAG,IAAI,qBAAc,CAAC,EAAE,OAAO,EAAE,wBAAc,EAAE,CAAC,CAAC;IAGtB,CAAC;IAErC,oBAAM,GAAN,UAAO,GAAW;QAChB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;IACrB,CAAC;IAED,oBAAM,GAAN;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,sBAAQ,GAAR,UAAS,KAAU;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;QAChC,6DAA6D;QAC7D,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,KAAG,IAAI,CAAC,OAAS,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QAC9C,iCAAiC;QAEjC,8BAA8B;QAC9B,8DAA8D;IAChE,CAAC;IAED,qBAAO,GAAP,UAAQ,EAAW;QACjB,kCAAkC;QAClC,6DAA6D;QACjE,EAAE,CAAC,CAAC,EAAE,KAAG,SAAS,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAE,GAAG,GAAE,EAAE,CAAC,CAAA;QAEhC,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,KAAG,IAAI,CAAC,OAAS,CAAC,CAAA;IAE3B,CAAC;IAIO,yBAAW,GAAnB,UAAoB,GAAa;QAC/B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IACzB,CAAC;IAEO,yBAAW,GAAnB,UAAoB,KAAU;QAC5B,oEAAoE;QACpE,8DAA8D;QAC9D,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC,OAAO;YAC1C,KAAK,CAAC,MAAM,GAAM,KAAK,CAAC,MAAM,WAAM,KAAK,CAAC,UAAY,GAAG,cAAc,CAAC;QAC1E,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,yBAAyB;QAChD,MAAM,CAAC,uBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAGH,UAAC;AAAD,CAxDA,AAwDC,IAAA;AAxDY,GAAG;IADf,iBAAU,EAAE;qCAQiB,WAAI;GAPrB,GAAG,CAwDf;AAxDY,kBAAG","file":"api.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\n//importar objetos de la libreria http\r\nimport {Http, Response, RequestOptions, Headers} from \"@angular/http\";\r\n//importar la clase Observable delalibreria Reactive Extensions\r\nimport {Observable} from \"rxjs/Observable\";\r\n\r\n\r\n//import {User} from \"./../user.class\";\r\nimport {contentHeaders} from \"./headers\";\r\n\r\n@Injectable()\r\nexport class Api {\r\n  //debemos acostumbranos a que  el api no este junto a los ficheros\r\n  protected urlBase: string = '/api/vetture';\r\n\r\n  options = new RequestOptions({ headers: contentHeaders });\r\n  //reclamar la dependencia sobre http\r\n  //se registra en la raiz, pues se le supone un uso com√πn a varios objetos\r\n  constructor(protected http: Http) { }\r\n\r\n  setUrl(url: string) {\r\n    this.urlBase = url;\r\n  }\r\n\r\n  getUrl(): string {\r\n    return this.urlBase;\r\n  }\r\n\r\n  register(model: any) {\r\n    let body = JSON.stringify(model)\r\n    //let options= new RequestOptions({headers: contentHeaders});\r\n    return this.http\r\n      .post(`${this.urlBase}`, body, this.options)\r\n    //.map(this.model= new Profile();\r\n\r\n    //   .catch(this.handleError);\r\n    //return this.http.post(this.urlBase+'register',body,options);\r\n  }\r\n\r\n  getData(id?: string) {\r\n    //let body = JSON.stringify(model)\r\n    //let options= new RequestOptions({headers: contentHeaders});\r\nif (id!==undefined)\r\n  this.setUrl(this.urlBase+ '/'+ id)\r\n\r\n    return this.http\r\n      .get(`${this.urlBase}`)\r\n\r\n  }\r\n\r\n\r\n\r\n  private extractData(res: Response) {\r\n    let body = res.json();\r\n    return body.data || {};\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    // We'd also dig deeper into the error to get a better message\r\n    let errMsg = (error.message) ? error.message :\r\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n    console.error(errMsg); // log to console instead\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n\r\n}\r\n"]}