{"version":3,"sources":["app/services/auth-service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAA2C;AAC3C,8CAA6C;AAC7C,kCAAgC;AAChC,gCAA8B;AAC9B,mCAAiC;AAGjC,IAAa,WAAW;IADxB;QAGE,eAAU,GAAY,KAAK,CAAC;IAY9B,CAAC;IAPC,2BAAK,GAAL;QAAA,iBAEC;QADC,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,UAAU,GAAG,IAAI,EAAtB,CAAsB,CAAC,CAAC;IAC3E,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IACH,kBAAC;AAAD,CAdA,AAcC,IAAA;AAdY,WAAW;IADvB,iBAAU,EAAE;;GACA,WAAW,CAcvB;AAdY,kCAAW","file":"auth-service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/delay';\n\n@Injectable()\nexport class AuthService {\n\n  isLoggedIn: boolean = false;\n\n  // store the URL so we can redirect after logging in\n  redirectUrl: string;\n\n  login(): Observable<boolean> {\n    return Observable.of(true).delay(1000).do(val => this.isLoggedIn = true);\n  }\n\n  logout(): void {\n    this.isLoggedIn = false;\n  }\n}\n"]}