{"version":3,"sources":["app/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAkD;AAClD,yDAAuD;AACvD,0CAAyC;AAQzC,IAAa,cAAc;IAKzB,wBAAmB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAChE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IALD,iCAAQ,GAAR;IACA,CAAC;IAKD,mCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IAC1E,CAAC;IACD,8BAAK,GAAL;QAAA,iBAYC;QAXC,IAAI,CAAC,OAAO,GAAG,sBAAsB,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC;YACjC,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;gBAChC,6CAA6C;gBAC7C,+CAA+C;gBAC/C,IAAI,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,GAAG,SAAS,CAAC;gBACvF,oBAAoB;gBACpB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACH,qBAAC;AAAD,CA5BA,AA4BC,IAAA;AA5BY,cAAc;IAN1B,gBAAS,CAAC;QACT,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,WAAW;QACrB,WAAW,EAAE,sBAAsB;KAEpC,CAAC;qCAMgC,0BAAW,EAAiB,eAAM;GALvD,cAAc,CA4B1B;AA5BY,wCAAc","file":"login.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-login',\n  templateUrl: 'login.component.html',\n  //styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  ngOnInit() {\n  }\n message: string;\n  constructor(public authService: AuthService, public router: Router) {\n    this.setMessage();\n  }\n  setMessage() {\n    this.message = 'Logged ' + (this.authService.isLoggedIn ? 'in' : 'out');\n  }\n  login() {\n    this.message = 'Trying to log in ...';\n    this.authService.login().subscribe(() => {\n      this.setMessage();\n      if (this.authService.isLoggedIn) {\n        // Get the redirect URL from our auth service\n        // If no redirect has been set, use the default\n        let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/office';\n        // Redirect the user\n        this.router.navigate([redirect]);\n      }\n    });\n  }\n  logout() {\n    this.authService.logout();\n    this.setMessage();\n  }\n}\n"]}